{
	"service": "vpn",
	"type": "np",
	"description": "Setup VPN for np",
	"steps" :
	[
		"sudo openvpn --config work/local/ops-nonlive.ovpn"
	]
}
{
	"service": "vpn",
	"type": "pr",
	"description": "Setup VPN for pr",
	"steps" :
	[
		"echo sudo openvpn --config work/local/ops-live.ovpn"
	]
}
{
	"service": "vpn",
	"type": "proton",
	"description": "Setup VPN for Proton",
	"steps" :
	[
		"VPNLIST='jp-free-01.protonvpn.net.udp.ovpn nl-free-01.protonvpn.net.udp.ovpn us-free-01.protonvpn.net.udp.ovpn'",
		"VPNRND=$[ $RANDOM % 3 + 1 ]",
		"VPNCFG=$(echo $VPNLIST | cut -d' ' -f $VPNRND)",
		"echo Using ProtonVPN: $VPNCFG",
		"sudo openvpn --config work/ddrive/PDrive/ProtonVPN/$VPNCFG"
	]
}
{
	"service": "lan",
	"type": "",
	"description": "Setup mount point for network drive, Setting up LAN with optional filter for drives, use names from mounts.lsetup.conf",
	"steps" :
	[
		"./mlan.lsetup.sh mounts.lsetup.conf $2",
		"echo \"Mounting completed at $(date)\"",
		"ffplay -nodisp -t 1 -autoexit ~/work/ddrive/userdata/sounds/notifications/access-granted-voice-ringtone.mp3 2>/dev/null"
	]
}
{
	"service": "home",
	"type": "t",
	"description": "Open preconfigured terminal windows for home operations, to capture use: mate-terminal --save-config myconfig.test.conf",
	"steps" :
	[
		"wt.exe -w 0 powershell -noexit -command \"cd c:\\work\"",
		"sleep 1",
		"wt.exe -w 0 powershell -noexit -command \"cd c:\\work\\home\""
	]
}
{
	"service": "home",
	"type": "apps",
	"description": "Run all the home apps",
	"steps" :
	[
		"if ( Get-Process firefox -ErrorAction SilentlyContinue -ErrorVariable ProcessError ) { write-host \"firefox already running\" } else { & \"C:\\Program Files\\Mozilla Firefox\\firefox.exe\" } ",
		"sleep 2",
		"if ( Get-Process thunderbird -ErrorAction SilentlyContinue -ErrorVariable ProcessError ) { write-host \"thunderbird already running\" } else { & \"C:\\Program Files\\Mozilla Thunderbird\\thunderbird.exe\" } ",
		"sleep 2",
		"if ( Get-Process Code -ErrorAction SilentlyContinue -ErrorVariable ProcessError ) { write-host \"visual studio code already running\" } else { & \"C:\\Users\\theod\\AppData\\Local\\Programs\\Microsoft VS Code\\Code.exe\" } ",
		"sleep 2",
		"if ( Get-Process cherrytree -ErrorAction SilentlyContinue -ErrorVariable ProcessError ) { write-host \"cherrytree already running\" } else { & \"C:\\Program Files\\CherryTree\\mingw64\\bin\\cherrytree.exe\" } ",
		"sleep 2",
		"echo \"Home Apps Started at $(date)\""
	]


}
{
	"service": "work",
	"type": "apps",
	"description": "Run all the work apps",
	"steps" :
	[
		"if ( Get-Process upm -ErrorAction SilentlyContinue -ErrorVariable ProcessError ) { write-host \"upm already running\" } else { & \"C:\\Program Files (x86)\\UPM\\upm.bat\" } ",
		"sleep 2",
		"if ( Get-Process sublime_text -ErrorAction SilentlyContinue -ErrorVariable ProcessError ) { write-host \"sublime already running\" } else { & \"C:\\Program Files\\Sublime Text 3\\sublime_text.exe\" } ",
		"sleep 2",
		"if ( Get-Process chrome -ErrorAction SilentlyContinue -ErrorVariable ProcessError ) { write-host \"Chrome already running\" } else { & \"C:\\Program Files\\Google\\Chrome\\Application\\chrome.exe\" } ",
		"sleep 2",
		"if ( Get-Process zim -ErrorAction SilentlyContinue -ErrorVariable ProcessError ) { write-host \"Zim already running\" } else { & \"C:\\Program Files\\Zim Desktop Wiki\\zim.exe\" } ",
		"echo \"Work Apps Started at $(date)\""
	]
}
{
	"service": "work",
	"type": "appz",
	"description": "Run all the work apps",
	"steps" :
	[
		"if ! pgrep upm.sh >/dev/null ; then /home/theodore/tools/upm-1.15.1/upm.sh /home/theodore/work/ddrive/PDrive/iptpass ; sleep 1 ; fi &",
		"sleep 2",
		"if ! pgrep chrome >/dev/null ; then /usr/bin/google-chrome-stable \"--profile-directory=Default\" %U >/dev/null 2>/dev/null ; sleep 1 ; fi &",
		"sleep 2",
		"if ! pgrep slack >/dev/null ; then if which slack >/dev/null ; then /usr/bin/slack %U >/dev/null 2>/dev/null ; sleep 1 ; else /usr/bin/flatpak run --branch=stable --arch=x86_64 --command=slack --file-forwarding com.slack.Slack @@u %U @@ ; sleep 1  ; fi ; fi &",
		"sleep 2",
		"if ! pgrep zim >/dev/null ; then /usr/bin/flatpak run --branch=stable --arch=x86_64 --command=zim --file-forwarding org.zim_wiki.Zim 2>/dev/null ; sleep 1 ; fi &",
		"echo \"Work Apps Started at $(date)\""
	]
}
{
	"service": "work",
	"type": "t",
	"description": "Open preconfigured terminator windows for work operations on tpmem01",
	"steps" :
	[
		"if ! pgrep terminator >/dev/null || [ $FORCEIT -eq 1 ] ; then /usr/bin/terminator -g /home/theodore/work/ddrive/userdata/terminator/tpmem01 -T tpmem01 >/dev/null 2>/dev/null ; sleep 3 ; else echo 'Already running, use -f to force start' ; fi &"
	]
}
{
	"service": "work",
	"type": "t2",
	"description": "Open preconfigured terminator windows for work operations on tpmem02",
	"steps" :
	[
		"if ! pgrep terminator >/dev/null || [ $FORCEIT -eq 1 ] ; then /usr/bin/terminator -g /home/theodore/work/ddrive/userdata/terminator/tpmem02 -T tpmem02 >/dev/null 2>/dev/null ; sleep 3 ; else echo 'Already running, use -f to force start' ; fi &"
	]
}
{
	"service": "work",
	"type": "tl",
	"description": "Open preconfigured terminal windows for home operations, to capture use: mate-terminal --save-config myconfig.test.conf",
	"steps" :
	[
		"mate-terminal --load-config=mateterm.workl.lsetup.conf"
	]
}
{
	"service": "vnc",
	"type": "",
	"description": "Start xvnc services for sharing the Desktop",
	"steps" :
	[
		"sudo systemctl start x11vnc.service"
	]
}
{
	"service": "smb",
	"type": "",
	"description": "Start samba services for sharing disks with Windows",
	"steps" :
	[
		"sudo touch /etc/libuser.conf",
		"sudo system-config-samba &"
	]
}
{
	"service": "syncme",
	"type": "",
	"description": "Syncing this script and files to a local share/backup",
	"steps" :
	[
		"cp mounts.lsetup.conf ./work/home/shell/machine_setup/",
		"cp mateterm.lsetup.conf ./work/home/shell/machine_setup/",
		"cp mateterm.workl.lsetup.conf ./work/home/shell/machine_setup/",
		"cp mlan.lsetup.sh ./work/home/shell/machine_setup/",
		"cp lsetup.cfg ./work/home/shell/machine_setup/",
		"cp lsetup.sh ./work/home/shell/machine_setup/",
		"if [ $? -eq 0 ] ; then echo 'lsetup files synced' ; aplay -q ~/work/ddrive/userdata/sounds/notifications/mixkit-confirmation-tone-2867.wav ; else echo 'failed to sync lsetup files' ; fi "
	]
}
{
	"service": "ytup",
	"type": "",
	"description": "Updates youtube-dl, the youtube downloader",
	"steps" :
	[
		"sudo youtube-dl -U"
	]
}
{
	"service": "YTDL",
	"type": "",
	"description": "Downloads youtube-dl, the youtube downloader",
	"steps" :
	[
		"sudo wget https://yt-dl.org/downloads/latest/youtube-dl -O /usr/bin/youtube-dl",
		"sudo chmod a+rx /usr/bin/youtube-dl"
	]
}
{
	"service": "res",
	"type": "Leviathan",
	"description": "Set the screen resolution",
	"steps" :
	[
		"xrandr --output DVI-I-2 --set underscan on --set \"underscan vborder\" 30 --set \"underscan hborder\" 30"
	]
}
{
	"service": "res",
	"type": "ViperM19",
	"description": "Set the screen resolution",
	"steps" :
	[
		"xrandr --newmode \"1680x1050_60.00\"  146.25  1680 1784 1960 2240  1050 1053 1059 1089 -hsync +vsync",
		"xrandr --addmode \"1680x1050_60.00\"  146.25  1680 1784 1960 2240  1050 1053 1059 1089 -hsync +vsync",
		"xrandr --addmode HDMI-1 1680x1050_60.00",
		"xrandr --output HDMI-1 --mode \"1680x1050_60.00\""
	]
}
{
	"service": "res",
	"type": "AtlantaM20",
	"description": "Set the screen resolution, can use: \"./lsetup.sh res $(uname -n)\"",
	"steps" :
	[
		"xrandr --newmode \"1920x1080_60.00\"  173.00  1920 2048 2248 2576  1080 1083 1088 1120 -hsync +vsync",
		"xrandr --addmode DVI-0 \"1920x1080_60.00\"",
		"xrandr --output DVI-0 --mode \"1920x1080_60.00\""
	]
}
{
	"service": "kc",
	"type": "",
	"description": "Quickly kill any hanging chrome instances, currently kills something else, so beware !",
	"steps" :
	[
		"for A in `ps -ef | grep field | awk '{print $2}'`; do kill -9 $A;done"
	]
}
{
	"service": "wakeup",
	"type": "Cerberus",
	"description": "Send wakeonlan message to Cerberus",
	"steps" :
	[
		"wakeonlan 50:e5:49:d3:6a:fe"
	]
}
{
	"service": "wakeup",
	"type": "Galactica",
	"description": "Send wakeonlan message to Galactica",
	"steps" :
	[
		"wakeonlan 00:1d:09:ef:c6:90"
	]
}
{
	"service": "wakeup",
	"type": "Deepstar5",
	"description": "Send wakeonlan message to Deepstar5",
	"steps" :
	[
		"wakeonlan 00:1a:a0:b5:3f:3f"
	]
}
